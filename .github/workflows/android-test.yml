---
name: Android - Test
on:
  workflow_run:
    workflows: [Android - Build]
    types:
      - completed
  workflow_dispatch:
    inputs:
      override_container_image:
        description: Override container image
        type: string
        required: false
      run_firebase_tests:
        description: Run firebase tests
        type: boolean
        required: false
      mockapi_test_repeat:
        description: Mockapi test repeat (self hosted)
        default: '1'
        required: true
        type: string
      e2e_test_repeat:
        description: e2e test repeat (self hosted)
        default: '0'
        required: true
        type: string
      e2e_tests_infra_flavor:
        description: >
          Infra environment to run e2e tests on (prod/stagemole).
          If set to 'stagemole' test-related artefacts will be uploaded.
        default: 'stagemole'
        required: true
        type: string
  # Build if main is updated to ensure up-to-date caches are available
  push:
    branches: [main]

permissions: {}

env:
  E2E_TEST_INFRA_FLAVOR: ${{ github.event.inputs.e2e_tests_infra_flavor || 'stagemole' }}

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use custom container image if specified
        if: ${{ github.event.inputs.override_container_image != '' }}
        run: echo "inner_container_image=${{ github.event.inputs.override_container_image }}"
          >> $GITHUB_ENV

      - name: Use default container image and resolve digest
        if: ${{ github.event.inputs.override_container_image == '' }}
        run: |
          echo "inner_container_image=$(cat ./building/android-container-image.txt)" >> $GITHUB_ENV
    outputs:
      container_image: ${{ env.inner_container_image }}

  instrumented-tests:
    name: Run instrumented tests
    runs-on: [self-hosted, android-device]
    needs: [build-app, build-instrumented-tests]
    strategy:
      fail-fast: false
      matrix:
        include:
          - test-type: app
            path: android/app/build/outputs/apk
            test-repeat: 1
          - test-type: mockapi
            path: android/test/mockapi/build/outputs/apk
            test-repeat: ${{ github.event_name == 'schedule' && 10 || github.event.inputs.mockapi_test_repeat || 1 }}
    steps:
      - name: Prepare report dir
        if: ${{ matrix.test-repeat != 0 }}
        id: prepare-report-dir
        env:
          INNER_REPORT_DIR: /tmp/${{ matrix.test-type }}-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          mkdir -p $INNER_REPORT_DIR
          echo "report_dir=$INNER_REPORT_DIR" >> $GITHUB_OUTPUT

      - name: Checkout repository
        if: ${{ matrix.test-repeat != 0 }}
        uses: actions/checkout@v4

      - name: Download artifact
        if: ${{ matrix.test-repeat != 0 }}
        uses: dawidd6/action-download-artifact@v8
        with:
          name: apks
          path: android/app/build/outputs/apk
          workflow: android-app.yml
          workflow_conclusion: success

      - name: Download artifact
        if: ${{ matrix.test-repeat != 0 }}
        uses: dawidd6/action-download-artifact@v8
        with:
          name: ${{ matrix.test-type }}-instrumentation-apks
          path: ${{ matrix.path }}
          workflow: android-app.yml
          workflow_conclusion: success

      - name: Calculate timeout
        id: calculate-timeout
        run: echo "timeout=$(( ${{ matrix.test-repeat }} * 10 ))" >> $GITHUB_OUTPUT
        shell: bash

      - name: Run instrumented test script
        if: ${{ matrix.test-repeat != 0 }}
        timeout-minutes: ${{ fromJSON(steps.calculate-timeout.outputs.timeout) }}
        shell: bash -ieo pipefail {0}
        env:
          AUTO_FETCH_TEST_HELPER_APKS: true
          TEST_TYPE: ${{ matrix.test-type }}
          BILLING_FLAVOR: oss
          INFRA_FLAVOR: prod
          REPORT_DIR: ${{ steps.prepare-report-dir.outputs.report_dir }}
        run: ./android/scripts/run-instrumented-tests-repeat.sh ${{ matrix.test-repeat }}

      - name: Upload instrumentation report (${{ matrix.test-type }})
        uses: actions/upload-artifact@v4
        if: always() && matrix.test-repeat != 0
        with:
          name: ${{ matrix.test-type }}-instrumentation-report
          path: ${{ steps.prepare-report-dir.outputs.report_dir }}
          if-no-files-found: ignore
          retention-days: 7

  instrumented-e2e-tests:
    name: Run instrumented e2e tests
    # Temporary workaround for targeting the runner android-runner-v1
    runs-on: [self-hosted, android-device, android-emulator]
    if: >
      github.event_name == 'schedule' ||
      (github.event.inputs.e2e_test_repeat != '0' && github.event_name != 'pull_request')
    needs: [build-app, build-instrumented-tests]
    strategy:
      matrix:
        include:
          - test-repeat: ${{ github.event.inputs.e2e_test_repeat || 1 }}
    steps:
      - name: Prepare report dir
        if: ${{ matrix.test-repeat != 0 }}
        id: prepare-report-dir
        env:
          INNER_REPORT_DIR: /tmp/${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          mkdir -p $INNER_REPORT_DIR
          echo "report_dir=$INNER_REPORT_DIR" >> $GITHUB_OUTPUT

      - name: Checkout repository
        if: ${{ matrix.test-repeat != 0 }}
        uses: actions/checkout@v4

      - name: Download artifact
        if: ${{ matrix.test-repeat != 0 }}
        uses: dawidd6/action-download-artifact@v8
        with:
          name: apks
          path: android/app/build/outputs/apk
          workflow: android-app.yml
          workflow_conclusion: success

      - name: Download artifact
        if: ${{ matrix.test-repeat != 0 }}
        uses: dawidd6/action-download-artifact@v8
        with:
          name: e2e-instrumentation-apks
          path: android/test/e2e/build/outputs/apk
          workflow: android-app.yml
          workflow_conclusion: success

      - name: Calculate timeout
        id: calculate-timeout
        run: echo "timeout=$(( ${{ matrix.test-repeat }} * 15 ))" >> $GITHUB_OUTPUT
        shell: bash

      - name: Run instrumented test script
        if: ${{ matrix.test-repeat != 0 }}
        timeout-minutes: ${{ fromJSON(steps.calculate-timeout.outputs.timeout) }}
        shell: bash -ieo pipefail {0}
        env:
          AUTO_FETCH_TEST_HELPER_APKS: true
          TEST_TYPE: e2e
          BILLING_FLAVOR: ${{ env.E2E_TEST_INFRA_FLAVOR == 'prod' && 'oss' || 'play' }}
          INFRA_FLAVOR: ${{ env.E2E_TEST_INFRA_FLAVOR }}
          PARTNER_AUTH: |-
            ${{ env.E2E_TEST_INFRA_FLAVOR == 'stagemole' && secrets.STAGEMOLE_PARTNER_AUTH || '' }}
          VALID_TEST_ACCOUNT_NUMBER: |-
            ${{ env.E2E_TEST_INFRA_FLAVOR == 'prod' && secrets.ANDROID_PROD_TEST_ACCOUNT || '' }}
          INVALID_TEST_ACCOUNT_NUMBER: '0000000000000000'
          ENABLE_HIGHLY_RATE_LIMITED_TESTS: ${{ github.event_name == 'schedule' && 'true' || 'false' }}
          ENABLE_ACCESS_TO_LOCAL_API_TESTS: true
          REPORT_DIR: ${{ steps.prepare-report-dir.outputs.report_dir }}
        run: ./android/scripts/run-instrumented-tests-repeat.sh ${{ matrix.test-repeat }}

      - name: Upload e2e instrumentation report
        uses: actions/upload-artifact@v4
        if: >
          always() && matrix.test-repeat != 0 && env.E2E_TEST_INFRA_FLAVOR == 'stagemole'
        with:
          name: e2e-instrumentation-report
          path: ${{ steps.prepare-report-dir.outputs.report_dir }}

  # firebase-tests:
  #   name: Run firebase tests
  #   if: github.event.inputs.run_firebase_tests == 'true'
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   needs: [build-app, build-instrumented-tests]
  #   env:
  #     FIREBASE_ENVIRONMENT_VARIABLES: "\
  #       clearPackageData=true,\
  #       runnerBuilder=de.mannodermaus.junit5.AndroidJUnit5Builder,\
  #       invalid_test_account_number=0000000000000000,\
  #       ENABLE_HIGHLY_RATE_LIMITED_TESTS=${{ github.event_name == 'schedule' && 'true' || 'false' }},\
  #       partner_auth=${{ secrets.STAGEMOLE_PARTNER_AUTH }},\
  #       ENABLE_ACCESS_TO_LOCAL_API_TESTS=false"
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - test-type: mockapi
  #           arg-spec-file: mockapi-oss.yml
  #           path: android/test/mockapi/build/outputs/apk
  #         - test-type: e2e
  #           arg-spec-file: e2e-play-stagemole.yml
  #           path: android/test/e2e/build/outputs/apk
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     # Using v3 due to v4 being very slow for this artifact.
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: apks
  #         path: android/app/build/outputs/apk

  #     # Using v3 due to v4 being very slow for this artifact.
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ matrix.test-type }}-instrumentation-apks
  #         path: ${{ matrix.path }}

  #     - name: Run tests on Firebase Test Lab
  #       uses: asadmansr/Firebase-Test-Lab-Action@v1.0
  #       env:
  #         SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
  #       with:
  #         arg-spec: |
  #           android/test/firebase/${{ matrix.arg-spec-file }}:default
  #           --environment-variables ${{ env.FIREBASE_ENVIRONMENT_VARIABLES }}
